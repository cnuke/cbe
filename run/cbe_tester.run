
assert_spec linux

exec rm -rf var/libcache/cbe
exec rm -rf var/libcache/cbe_cxx
exec rm -rf var/libcache/cbe_common
exec rm -rf var/libcache/cbe_common_cxx
exec rm -rf var/libcache/cbe_init
exec rm -rf var/libcache/cbe_init_cxx
exec rm -rf var/libcache/cbe_check
exec rm -rf var/libcache/cbe_check_cxx
exec rm -rf var/libcache/cbe_dump
exec rm -rf var/libcache/cbe_dump_cxx
exec rm -rf var/libcache/external_crypto
exec rm -rf var/libcache/external_crypto_cxx

proc cbe_image_file { } {
	return "cbe_block.img"
}

set image_size 512
if {[info exists ::env(CBE_IMAGE_SIZE)]} {
	set image_size $::env(CBE_IMAGE_SIZE)
}

proc cbe_image_size_mb { } {
	global image_size
	return $image_size
}

proc cbe_vbd_size_mb { } {
	return [expr [cbe_image_size_mb] / 2]
}

proc cbe_ft_size_mb { } {
	return [expr [cbe_image_size_mb] / 8]
}

append build_components {
	core init timer
	app/cbe_tester
	server/log_terminal
	server/report_rom
	server/lx_block
}

build $build_components

create_boot_directory

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes"/>
	</start>

	<start name="log_terminal">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Terminal"/></provides>
	</start>

	<start name="lx_block" ld="no">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Block"/> </provides>
		<config file="} [cbe_image_file] {" block_size="4K" writeable="yes"/>
	</start>

	<start name="cbe_tester" caps="200">
		<resource name="RAM" quantum="80M"/>
		<config show_progress="no" sync_interval="1" verbose="yes" report="no" log="yes" stop_on_error="yes">

			<crypto>
				<key slot="0" id="3"  value="This is a creative key value   !"/>
				<key slot="1" id="12" value="All your base are belong to us ?"/>
			</crypto>

			<tests>

				<initialize>
					<key id="12" />

					<virtual-block-device
						nr_of_levels="3"
						nr_of_children="64"
						nr_of_leafs="4096" />

					<free-tree
						nr_of_levels="3"
						nr_of_children="64"
						nr_of_leafs="4096" />
				</initialize>

				<replay verbose="yes" bulk="no">
					<request type="write" lba="0"  count="3"/>
					<request type="sync"  lba="0"  count="3"/>
					<request type="write" lba="2"  count="1"/>
					<request type="write" lba="5"  count="8"/>
					<request type="read"  lba="0"  count="20"/>
					<request type="write" lba="2"  count="22"/>
					<request type="write" lba="0"  count="18"/>
					<request type="sync"  lba="0"  count="3"/>
					<request type="write" lba="8"  count="17"/>
					<request type="write" lba="10" count="13"/>
					<request type="write" lba="2"  count="9"/>
					<request type="write" lba="5"  count="8"/>
					<request type="read"  lba="0"  count="20"/>
					<request type="write" lba="2"  count="22"/>
					<request type="write" lba="0"  count="18"/>
					<create-snapshot id="1" quarantine="yes"/>
				</replay>

				<check/>

				<dump unused_nodes="no"
				      max_superblocks="1"
				      max_snapshots="1"
				      vbd="yes"
				      vbd_pba_filter_enabled="no"
				      vbd_pba_filter="38"
				      vbd_vba_filter_enabled="no"
				      vbd_vba_filter="0x13"
				      free_tree="no"
				      hashes="no"/>

				<initialize>
					<key id="3" />

					<virtual-block-device
						nr_of_levels="4"
						nr_of_children="4"
						nr_of_leafs="40" />

					<free-tree
						nr_of_levels="4"
						nr_of_children="4"
						nr_of_leafs="40" />
				</initialize>

				<replay verbose="yes" bulk="no">
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<request type="read"  lba="10" count="21"/>
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<request type="read"  lba="10" count="21"/>
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<request type="read"  lba="10" count="21"/>
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<request type="read"  lba="10" count="21"/>
					<request type="sync"  lba="7"  count="1"/>
					<request type="write" lba="10" count="2"/>
					<create-snapshot id="2" quarantine="yes"/>
					<request type="read"  lba="10" count="21"/>
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<discard-snapshot id="1"/>
					<request type="read"  lba="10" count="21"/>
					<request type="write" lba="7"  count="5"/>
					<request type="write" lba="4"  count="11"/>
					<request type="read"  lba="12" count="18"/>
					<request type="read"  lba="10" count="21"/>
				</replay>

				<check/>

			</tests>

		</config>
		<route>
			<service name="Block"> <child name="lx_block"/> </service>
			<service name="Terminal"> <child name="log_terminal"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

</config>}

install_config $config

exec rm -rf bin/[cbe_image_file]
exec truncate -s [cbe_image_size_mb]M bin/[cbe_image_file]

append boot_modules {
	core init timer cbe_tester
	ld.lib.so spark.lib.so libsparkcrypto.lib.so
	log_terminal report_rom lx_block
}

append boot_modules [cbe_image_file]

build_boot_image $boot_modules

append qemu_args " -nographic -m 1280 "

run_genode_until {.*child "cbe_tester" exited with exit value 0.*\n} 240
